{"version":3,"file":"index.js","sources":["../src/js/top-movie.js","../src/js/genres.js","../src/js/advantages.js"],"sourcesContent":["'use strict';\n\nimport '../css/styles.css';\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst END_POINT = '/trending/movie/week';\nconst API_KEY = '5cd3b967f25ca5ea88c6b3955d7951c5';\n\nconst container = document.querySelector('.top-movie-list');\n\nasync function serviceMovie() {\n  const { data } = await axios(`${BASE_URL}${END_POINT}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n}\n\nserviceMovie()\n  .then(movies => {\n    const moviesMarkup = createMarkup(movies);\n    container.insertAdjacentHTML('beforeend', moviesMarkup);\n\n    const duplicateMarkup = createMarkup(movies);\n    container.insertAdjacentHTML('beforeend', duplicateMarkup);\n\n    const movieCardWidth = container.firstElementChild.offsetWidth;\n    const totalMovies = movies.length * 2;\n    const containerWidth = (movieCardWidth + 16) * totalMovies;\n\n    container.style.width = `${containerWidth}px`;\n\n    container.style.animationDuration = `${totalMovies * 2}s`;\n  })\n  .catch(error => console.log(error.message));\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ poster_path, original_title }) => `<li class=\"movie-card\">\n            <img src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${original_title}\">\n        </li>`\n    )\n    .join('');\n}\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const listItems = document.querySelectorAll('.genres-item');\n\n  function startAnimation() {\n    listItems.forEach((item, index) => {\n      setTimeout(() => {\n        item.style.opacity = 1;\n        item.style.transform = `translateX(0)`;\n      }, index * 300);\n    });\n  }\n\n  const observer = new IntersectionObserver(\n    entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          startAnimation();\n          observer.disconnect();\n        }\n      });\n    },\n    {\n      threshold: 0.7,\n    }\n  );\n\n  observer.observe(document.querySelector('.genres-list'));\n});\n","'use strict';\n\nimport Accordion from 'accordion-js';\nimport 'accordion-js/dist/accordion.min.css';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const accordion = new Accordion('#ac-list', {\n    closeOther: true,\n  });\n  accordion.open(0);\n});\n"],"names":["BASE_URL","END_POINT","API_KEY","container","serviceMovie","data","axios","movies","moviesMarkup","createMarkup","duplicateMarkup","movieCardWidth","totalMovies","containerWidth","error","arr","poster_path","original_title","listItems","startAnimation","item","index","observer","entries","entry","Accordion"],"mappings":"iyBAKA,MAAMA,EAAW,+BACXC,EAAY,uBACZC,EAAU,mCAEVC,EAAY,SAAS,cAAc,iBAAiB,EAE1D,eAAeC,GAAe,CAC5B,KAAM,CAAE,KAAAC,CAAM,EAAG,MAAMC,EAAM,GAAGN,CAAQ,GAAGC,CAAS,GAAI,CACtD,OAAQ,CACN,QAASC,CACV,CACL,CAAG,EAED,OAAOG,EAAK,OACd,CAEAD,EAAc,EACX,KAAKG,GAAU,CACd,MAAMC,EAAeC,EAAaF,CAAM,EACxCJ,EAAU,mBAAmB,YAAaK,CAAY,EAEtD,MAAME,EAAkBD,EAAaF,CAAM,EAC3CJ,EAAU,mBAAmB,YAAaO,CAAe,EAEzD,MAAMC,EAAiBR,EAAU,kBAAkB,YAC7CS,EAAcL,EAAO,OAAS,EAC9BM,GAAkBF,EAAiB,IAAMC,EAE/CT,EAAU,MAAM,MAAQ,GAAGU,CAAc,KAEzCV,EAAU,MAAM,kBAAoB,GAAGS,EAAc,CAAC,GAC1D,CAAG,EACA,MAAME,GAAS,QAAQ,IAAIA,EAAM,OAAO,CAAC,EAE5C,SAASL,EAAaM,EAAK,CACzB,OAAOA,EACJ,IACC,CAAC,CAAE,YAAAC,EAAa,eAAAC,CAAc,IAAO;AAAA,uDACYD,CAAW,UAAUC,CAAc;AAAA,cAErF,EACA,KAAK,EAAE,CACZ,CC7CA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMC,EAAY,SAAS,iBAAiB,cAAc,EAE1D,SAASC,GAAiB,CACxBD,EAAU,QAAQ,CAACE,EAAMC,IAAU,CACjC,WAAW,IAAM,CACfD,EAAK,MAAM,QAAU,EACrBA,EAAK,MAAM,UAAY,eAC/B,EAASC,EAAQ,GAAG,CACpB,CAAK,CACF,CAED,MAAMC,EAAW,IAAI,qBACnBC,GAAW,CACTA,EAAQ,QAAQC,GAAS,CACnBA,EAAM,iBACRL,IACAG,EAAS,WAAU,EAE7B,CAAO,CACF,EACD,CACE,UAAW,EACZ,CACL,EAEEA,EAAS,QAAQ,SAAS,cAAc,cAAc,CAAC,CACzD,CAAC,ECxBD,SAAS,iBAAiB,mBAAoB,IAAM,CAChC,IAAIG,EAAU,WAAY,CAC1C,WAAY,EAChB,CAAG,EACS,KAAK,CAAC,CAClB,CAAC"}